/*
 * Copyright 2011 "Julio César Carrascal Urquijo" <jcarrascal@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * = Mirror selected grid rectangles in a Fireworks file =
 * Install by copying to Fireworks/Configuration/Commands/ and execute
 * inside Fireworks from the Commands menu.
 * Versión: 1.0 
 */

var spritesheet = fw.getDocumentDOM();
if (fw.selection.length == 0 && fw.yesNoDialog('Do you wish to select all?'))
	spritesheet.selectAll();

if (fw.selection.length > 0)
{
	var frameWidth = spritesheet.gridSize.x,
		frameHeight = spritesheet.gridSize.y,
		bounds = spritesheet.getSelectionBounds(),
		x1 = Math.floor(bounds.left / frameWidth) * frameWidth,
		y1 = Math.floor(bounds.top / frameHeight) * frameHeight,
		frameCount = Math.ceil((bounds.right - bounds.left) / frameWidth),
		x2 = x1 + (frameWidth * (frameCount - 1)),
		y2 = y1 + frameHeight;

	for (var i = 0; i < frameCount; ++i) {
		// Copy and move to new location
		selection = { left: x1, top: y1, right: x1 + frameWidth, bottom: y1 + frameHeight };
		fw.selection = spritesheet.elementsAt(selection);
		bounds = spritesheet.getSelectionBounds();
		offsetX = bounds.left - x1,
		offsetY = bounds.top - y1;
		spritesheet.moveSelectionTo({ x: x2 + offsetX, y: y2 + offsetY }, true, false);
		spritesheet.selectNone();

		// Flip horizontally
		var rect = { left: x2 + 1, top: y2 + 1, right: x2 + frameWidth - 1, bottom: y2 + frameHeight - 1 };
		spritesheet.addNewRectanglePrimitive(rect, 0);
		fw.selection = spritesheet.elementsAt(rect);
		spritesheet.reflectSelection(true, false, 'transformAttributes');
		fw.selection = spritesheet.elementsAt({ left: rect.left, top: rect.top, right: rect.left, bottom: rect.top });
		spritesheet.deleteSelection(false);

		x1 += frameWidth;
		x2 -= frameWidth;
	}
}
